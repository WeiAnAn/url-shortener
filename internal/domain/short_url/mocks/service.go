// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/short_url/service.go

// Package mock_shorturl is a generated GoMock package.
package mock_shorturl

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockShortURLGenerator is a mock of ShortURLGenerator interface.
type MockShortURLGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockShortURLGeneratorMockRecorder
}

// MockShortURLGeneratorMockRecorder is the mock recorder for MockShortURLGenerator.
type MockShortURLGeneratorMockRecorder struct {
	mock *MockShortURLGenerator
}

// NewMockShortURLGenerator creates a new mock instance.
func NewMockShortURLGenerator(ctrl *gomock.Controller) *MockShortURLGenerator {
	mock := &MockShortURLGenerator{ctrl: ctrl}
	mock.recorder = &MockShortURLGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortURLGenerator) EXPECT() *MockShortURLGeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockShortURLGenerator) Generate(arg0 int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockShortURLGeneratorMockRecorder) Generate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockShortURLGenerator)(nil).Generate), arg0)
}
